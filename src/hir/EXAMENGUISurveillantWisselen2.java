/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hir;


import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ugent
 */
public class EXAMENGUISurveillantWisselen2 extends javax.swing.JFrame {
    private ExamenGUISurveilantWisselen surveillantWisselen;

    public EXAMENGUISurveillantWisselen2() {
        initComponents();
        this.surveillantWisselen = surveillantWisselen;
    }

    /**
     * Creates new form EXAMENGUIWIJZEGEN
     */
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu1 = new java.awt.PopupMenu();
        popupMenu2 = new java.awt.PopupMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jOptionPane1 = new javax.swing.JOptionPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        beschikbareAssistenten = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        popupMenu1.setLabel("popupMenu1");

        popupMenu2.setLabel("popupMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Beschikbare assistenten:");

        jScrollPane1.setViewportView(beschikbareAssistenten);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("MET WELKE ASSISTENT WILT U WISSELEN?");

        jButton1.setText("Wisselen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(87, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)))
                .addGap(38, 38, 38))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 80, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      int a = JOptionPane.showConfirmDialog(this,"Is deze assistent hiermee akkoord?","Belangrijke melding", JOptionPane.YES_NO_OPTION);
      if(a == JOptionPane.YES_OPTION){
          try {
              surveillantiesUitwisselen();
          } catch (DBException ex) {
              Logger.getLogger(EXAMENGUISurveillantWisselen2.class.getName()).log(Level.SEVERE, null, ex);
          }
      } else {
          JOptionPane.showMessageDialog(this, "De surveillantiewisseling kan niet uitgevoerd worden!" , "Belangrijke melding", JOptionPane.WARNING_MESSAGE);
          EXAMENGUIMENU b = new EXAMENGUIMENU();
          b.show();
      }
    }//GEN-LAST:event_jButton1ActionPerformed

   
    
    //nadat assistent examensessie heeft ingegeven om te wisselen , wordt die in de lijst ingestoken .
   public void setAssisten() throws DBException{
        DefaultListModel dlm = new DefaultListModel();
        for(Assistent a : DBAssistent.getAssistenten()){
            if(a.isStatusVrij() && a.isSlotnrVrij(surveillantWisselen.getTeWisselenExamenSessie().getSlot().getSlotNr(), a))
                dlm.addElement(a.toString());
        }
       beschikbareAssistenten.setModel(dlm);
        
    }
    
   /*
    
    
    
   
    public void setExamenSessiesBeschikbaar(ArrayList<String> a){
        DefaultListModel b = new DefaultListModel();
        for(String c : a){
            b.addElement(c);
        }
        beschikbareAssistenten.setModel(b);
    }
    */
    
    public void surveillantiesUitwisselen() throws DBException{
       Assistent a = DBAssistent.getAssistent(surveillantWisselen.getAssistentNummer());
       Assistent b = DBAssistent.getAssistent(getWisselAssistent().getANr());
        for(ExamenSessie d : a.getToegewezenSessies()){
            if(surveillantWisselen.getTeWisselenExamenSessie().equals(d)){
                a.getToegewezenSessies().remove(d);
                
            }
        } for(ExamenSessie e : b.getToegewezenSessies()){
            b.getToegewezenSessies().add(surveillantWisselen.getTeWisselenExamenSessie());
        }
    }
        
              
               
        
    
   
    public Assistent getWisselAssistent(){
        return beschikbareAssistenten.getSelectedValue();
    }
    /*public String getExamenSessiesBeschikbaar(){
        return beschikbareAssistenten.getSelectedValue();
    }
    */
   /* public int AssistenNummerNemen(String a){
        String[] b = a.split("-");
        int assNr = Integer.parseInt(b[0]);
        return assNr;
    }
*/
       
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<Assistent> beschikbareAssistenten;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JOptionPane jOptionPane1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.PopupMenu popupMenu1;
    private java.awt.PopupMenu popupMenu2;
    // End of variables declaration//GEN-END:variables
}
